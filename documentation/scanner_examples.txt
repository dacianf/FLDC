Correct example:

Input:


```
    main(){
        [int] numbers = [100]
        int n
        citeste "C", n
        int tmp = n
        int i = 0
        while tmp > 0 {
            citeste "S", numbers[i]
            i++
            tmp --
        }
        int sum = 0
        for int i = 0; i < maxLenght; i++ {
            sum += numbers[i]
        }
        afiseaza sum
    }
```

Output:


pif.out
Program internal form:
(('main', 33), (-1, -1))
(('(', 6), (-1, -1))
((')', 7), (-1, -1))
(('{', 4), (-1, -1))
(('[', 2), (-1, -1))
(('int', 35), (-1, -1))
((']', 3), (-1, -1))
((' ', 9), (-1, -1))
(('numbers', 0), (17, 0))
((' ', 9), (-1, -1))
(('=', 21), (-1, -1))
((' ', 9), (-1, -1))
(('[', 2), (-1, -1))
(('100', 1), (27, 0))
((']', 3), (-1, -1))
(('int', 35), (-1, -1))
((' ', 9), (-1, -1))
(('n', 0), (1, 0))
(('citeste', 37), (-1, -1))
((' ', 9), (-1, -1))
(('"C"', 1), (23, 0))
((',', 13), (-1, -1))
((' ', 9), (-1, -1))
(('n', 0), (1, 0))
(('int', 35), (-1, -1))
((' ', 9), (-1, -1))
(('tmp', 0), (10, 0))
((' ', 9), (-1, -1))
(('=', 21), (-1, -1))
((' ', 9), (-1, -1))
(('n', 0), (1, 0))
(('int', 35), (-1, -1))
((' ', 9), (-1, -1))
(('i', 0), (23, 1))
((' ', 9), (-1, -1))
(('=', 21), (-1, -1))
((' ', 9), (-1, -1))
(('0', 1), (24, 0))
(('while', 42), (-1, -1))
((' ', 9), (-1, -1))
(('tmp', 0), (10, 0))
((' ', 9), (-1, -1))
(('>', 23), (-1, -1))
((' ', 9), (-1, -1))
(('0', 1), (24, 0))
((' ', 9), (-1, -1))
(('{', 4), (-1, -1))
(('citeste', 37), (-1, -1))
((' ', 9), (-1, -1))
(('"S"', 1), (12, 0))
((',', 13), (-1, -1))
((' ', 9), (-1, -1))
(('numbers', 0), (17, 0))
(('[', 2), (-1, -1))
(('i', 0), (23, 1))
((']', 3), (-1, -1))
(('i', 0), (23, 1))
(('++', 29), (-1, -1))
(('tmp', 0), (10, 0))
((' ', 9), (-1, -1))
(('--', 30), (-1, -1))
(('}', 5), (-1, -1))
(('int', 35), (-1, -1))
((' ', 9), (-1, -1))
(('sum', 0), (16, 0))
((' ', 9), (-1, -1))
(('=', 21), (-1, -1))
((' ', 9), (-1, -1))
(('0', 1), (24, 0))
(('for', 41), (-1, -1))
((' ', 9), (-1, -1))
(('int', 35), (-1, -1))
((' ', 9), (-1, -1))
(('i', 0), (23, 1))
((' ', 9), (-1, -1))
(('=', 21), (-1, -1))
((' ', 9), (-1, -1))
(('0', 1), (24, 0))
((';', 12), (-1, -1))
((' ', 9), (-1, -1))
(('i', 0), (23, 1))
((' ', 9), (-1, -1))
(('<', 19), (-1, -1))
((' ', 9), (-1, -1))
(('maxLenght', 0), (2, 0))
((';', 12), (-1, -1))
((' ', 9), (-1, -1))
(('i', 0), (23, 1))
(('++', 29), (-1, -1))
((' ', 9), (-1, -1))
(('{', 4), (-1, -1))
(('sum', 0), (16, 0))
((' ', 9), (-1, -1))
(('+=', 31), (-1, -1))
((' ', 9), (-1, -1))
(('numbers', 0), (17, 0))
(('[', 2), (-1, -1))
(('i', 0), (23, 1))
((']', 3), (-1, -1))
(('}', 5), (-1, -1))
(('afiseaza', 38), (-1, -1))
((' ', 9), (-1, -1))
(('sum', 0), (16, 0))
(('}', 5), (-1, -1))

st.out
Symbol table
(represented as hash table)
hash: 0
	[]
hash: 1
	['n']
hash: 2
	['maxLenght']
hash: 3
	[]
hash: 4
	[]
hash: 5
	[]
hash: 6
	[]
hash: 7
	[]
hash: 8
	[]
hash: 9
	[]
hash: 10
	['tmp']
hash: 11
	[]
hash: 12
	['"S"']
hash: 13
	[]
hash: 14
	[]
hash: 15
	[]
hash: 16
	['sum']
hash: 17
	['numbers']
hash: 18
	[]
hash: 19
	[]
hash: 20
	[]
hash: 21
	[]
hash: 22
	[]
hash: 23
	['"C"', 'i']
hash: 24
	['0']
hash: 25
	[]
hash: 26
	[]
hash: 27
	['100']
hash: 28
	[]
hash: 29
	[]
hash: 30
	[]
hash: 31
	[]

Example with lexical error:

Input:
```
    main(){
        a = "
        int c = 2
        for int i=0, i < 2a; i++{
             afiseaza(i)
        }
    }
```

Output:
```
    raise Exception:
            Lexical error: Unknown token '2a' at line 4 on position 14
```