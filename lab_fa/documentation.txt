Finite Automata

Dacian Florea, 933
Github: https://github.com/dacianf/lftc/lab_fa

Implementation:

    Finite Automata class has the following fields:
        - List<String> states                       -- the set of all states
        - List<String> alphabet                     -- the alphabet
        - String initialState                       -- the initial state
        - Map<Pair<String, String>, List<String>>   -- all transition pairs
        - List<String> finalStates                  -- the set of final states

    Transitions are stored inside a dictionary with:
        - KEY:     tuple from a state and an element from the alphabet
        - VALUE:   list of strings where a string is a state that can be reach from the key


The finite automata is read from a file an has the following EBNF form:
    states = 'Q' '=' '{' stateIdentifier {',' stateIdentifier } '}'
    alphabet = 'E' '=' '{' charIdentifier {',' charIdentifier } '}'
    initialState = 'q0' '=' stateIdentifier
    finalStates = 'Q' '=' '{' stateIdentifier {',' stateIdentifier } '}'
    transitions = 'S' '=' '{' '\n'  { transitionStateIdentifier } '}'
    transitionStateIdentifier = '(' stateIdentifier ',' alphabet ')' '->' stateIdentifier ',' '\n'
    stateIdentifier = 'q' digit {digit}
    digit = '0-9'
    charIdentifier = digit | 'a-z' | 'A-Z' | { digit | 'a-z' | 'A-Z' }
